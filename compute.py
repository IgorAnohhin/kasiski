__author__ = 'v-iganoh'

from vegenere import Vegenere
from kassiski import Kassiski


print 'compute'

ks = Kassiski()
krypto = 'JJLOLGOSZIWRVYHMWTVMBIXVNJFKXBYFWOKYOHNRYMGXDZMXMTTRNLZTAGAXYHAKRXYBAOHASJXZXXIZKOYRXJJANKKRXTYLTTFGYMKWPNNVNBTEFGGIOKWLGWRSFRAXXZMXYDLZJFSTWKWGIWRVYHMWTVMRNFLLTVAXXJTGHZBRIBTLTYTNTIYUZGJFMOTGZTTIMBKAXZMBYLHGQBTUTXYBIZEGWMNJHTQRGXLARIZNHTRTJJTHTNZFGGIOKWLGWROXBZXVURIAYTZNHTFEGGBRNMEYRVNVGQEETGKFLYZFKXMNJTJAXXXTXDAGXTIQTYXBIFEITFVZMKWTTIBYWXYYKOHMKIMUWTTIHSNSKIIUQRTTFOFEZNFKGNZNYUSXTTPGXLARXYYAGYMNJTJAXXXTXDAGXTWZTTYNSHHSUNZJKZMXTBAOHAIQTYXBIFEIWRVYHYDLZJFYFKKXXIZKKFGJBAOHAGWXTTMWZTTYNSHHSUNZFMOTGAXXYWNRJLCMBIMTXJGKBTTINTNGZZBZNOKXHSJLAGKUZMOSXYXNIMTYHHSUNZNGMYAKVNGSMARYUZKOJKZWTTXYUWFIFGHJIKWYUWFKIXDUHTJGZNTRQRLFLZJKZMTTGRIQTYXBIFEITFVZMKWLNTPKAXXYAOXBYSHZKHXKKKJMNJFKYAUILZTBTUNZFGJTNZUNZYAKITZFYXTFZMXLTNXNXXYKGSLLTKSFKKAXXDKKXMXNVZJWNJGIJYOSWOSZWZTTYNSFEMTKOYASXKKQBKXHTBTRPBTLTLNGKQBTJUKYPKJGAXBTLXDYKGUHCJKCMBRJUKNGMQBSNMKIBTXHSJBSUHXYTTYPGDL'
keys = ks.compute(krypto, 3, 5, 3)

veg = Vegenere()

key1 = keys[0]
key2 = keys[1]
key3 = keys[2]
count = 1
for k1 in enumerate(key1):
    for k2 in enumerate(key2):
        for k3 in enumerate(key3):
            print ''
            print '****'
            key = str(k1[1]) + str(k2[1]) + str(k3[1])
            print 'Key N%s => %s' % (count, key)
            plain_text = veg.decrypt(krypto, key) # Key N6 => GFT
            print 'Text: '
            # DESIGNINGCRYPTOGRAPHICSCHEMESISADIFFICULTTASKTHEGOALISTOHAVESCHEMESWHICHMEETSECURITYREQUIREMENTSNOMATTERWHICHWAYAN
            # ADVERSARYMAYUSETHESYSTEMMODERNCRYPTOGRAPHYHASFOCUSEDONBUILDINGASOUNDFOUNDATIONTOACHIEVETHISGOALINPARTICULAR
            # THEONLYASSUMPTIONMADEABOUTANADVERSARYISITSCOMPUTATIONALABILITYTYPICALLYONEASSUMESTHEADVERSARYHASACLASSICAL
            # COMPUTERANDISRESTRICTEDTORANDOMIZEDPOLYNOMIALTIMEBUTIFONENOWASSUMESTHATTHEADVERSARYHASAQUANTUMCOMPUTERTHEN
            # WHICHCLASSICALCRYPTOSYSTEMSARESECUREANDWHICHARENOTQUANTUMCOMPUTATIONUSESRULESWHICHARENEWANDUNINTUITIVESOME
            # SUBROUTINESSUCHASCOMPUTINGTHEQUANTUMFOURIERTRANSFORMCANBEPERFORMEDEXPONENTIALLYFASTERTHANBYCLASSICALCOMPUTER
            # SHOWEVERTHISISNOTFORFREETHEMETHODSTOINPUTANDOUTPUTTHEDATAFROMTHEFOURIERTRANSFORMAREVERYRESTRICTEDHENCEFINDINGQUANTUM
            # ALGORITHMSRELIESONWALKINGAFINELINEBETWEENUSINGEXTRAPOWERWHILEBEINGLIMITEDINSOMEIMPORTANTWAYS
            print plain_text
            count += 1
            print '****'
